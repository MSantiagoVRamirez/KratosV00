// <auto-generated />
using System;
using Kratos.Server.Models.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kratos.Server.Migrations
{
    [DbContext(typeof(KratosContext))]
    [Migration("20250826223959_Cambio006")]
    partial class Cambio006
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ActualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("categoriapadreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("categoriapadreId");

                    b.ToTable("Categoria", (string)null);
                });

            modelBuilder.Entity("Empresa", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("actividadId")
                        .HasColumnType("int");

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("actualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("confirmarContraseña")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("contraseña")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("creadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("dv")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("nit")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("nombreComercial")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("razonSocial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("regimenId")
                        .HasColumnType("int");

                    b.Property<string>("representanteLegal")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tiposociedadId")
                        .HasColumnType("int");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.HasIndex("actividadId");

                    b.HasIndex("regimenId");

                    b.HasIndex("tiposociedadId");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("Kratos.Server.Models.Seguridad.ActividadEconomica", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codigoCiiu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ActividadEconomica");
                });

            modelBuilder.Entity("Kratos.Server.Models.Seguridad.Modulo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("Modulo");
                });

            modelBuilder.Entity("Kratos.Server.Models.Seguridad.Permiso", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("consultar")
                        .HasColumnType("bit");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("editar")
                        .HasColumnType("bit");

                    b.Property<bool>("eliminar")
                        .HasColumnType("bit");

                    b.Property<bool>("exportar")
                        .HasColumnType("bit");

                    b.Property<bool>("importar")
                        .HasColumnType("bit");

                    b.Property<bool>("insertar")
                        .HasColumnType("bit");

                    b.Property<bool>("leer")
                        .HasColumnType("bit");

                    b.Property<int>("modulosId")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("rolesId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("modulosId");

                    b.HasIndex("rolesId");

                    b.ToTable("Permiso");
                });

            modelBuilder.Entity("Kratos.Server.Models.Seguridad.RegimenTributario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("RegimenTributario");
                });

            modelBuilder.Entity("Kratos.Server.Models.Seguridad.Rol", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("empresaId")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.HasIndex("empresaId");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("Kratos.Server.Models.Seguridad.TipoSociedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TipoSociedad");
                });

            modelBuilder.Entity("Kratos.Server.Models.Seguridad.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("actualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("confirmarContraseña")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("contraseña")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("creadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<string>("nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("rolesId")
                        .HasColumnType("int");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.HasIndex("rolesId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Kratos.Server.Models.Ventas.Compra", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<bool>("estaCancelada")
                        .HasColumnType("bit");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("numeroFactura")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("proveedorId")
                        .HasColumnType("int");

                    b.Property<int>("puntoVentaId")
                        .HasColumnType("int");

                    b.Property<int?>("solicitanteId")
                        .HasColumnType("int");

                    b.Property<int>("tipoCompra")
                        .HasColumnType("int");

                    b.Property<int>("tipoPago")
                        .HasColumnType("int");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("proveedorId");

                    b.HasIndex("puntoVentaId");

                    b.HasIndex("solicitanteId");

                    b.ToTable("Compra");
                });

            modelBuilder.Entity("Kratos.Server.Models.Ventas.Impuesto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("porcentaje")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("tratamientoId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("tratamientoId");

                    b.ToTable("Impuesto");
                });

            modelBuilder.Entity("Kratos.Server.Models.Ventas.Inventario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("actualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("creadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int>("productoId")
                        .HasColumnType("int");

                    b.Property<int>("puntoventaId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("productoId");

                    b.HasIndex("puntoventaId");

                    b.ToTable("Inventario");
                });

            modelBuilder.Entity("Kratos.Server.Models.Ventas.POS", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("porcentajeDescuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("porcentajeInpuesto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("precioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("productoId")
                        .HasColumnType("int");

                    b.Property<decimal>("subTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ventaId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("productoId");

                    b.HasIndex("ventaId");

                    b.ToTable("POS");
                });

            modelBuilder.Entity("Kratos.Server.Models.Ventas.Pedido", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("compraId")
                        .HasColumnType("int");

                    b.Property<decimal>("porcentajeDescuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("porcentajeInpuesto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("precioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("productoId")
                        .HasColumnType("int");

                    b.Property<decimal>("subTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("compraId");

                    b.HasIndex("productoId");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("Kratos.Server.Models.Ventas.Producto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("actualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<int>("categoriaId")
                        .HasColumnType("int");

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("costo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("creadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("productoServicio")
                        .HasColumnType("bit");

                    b.Property<int>("stockMinimo")
                        .HasColumnType("int");

                    b.Property<int>("subCategoriaId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("categoriaId");

                    b.HasIndex("subCategoriaId");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("Kratos.Server.Models.Ventas.Proveedor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("direccion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("empresaId")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("empresaId");

                    b.ToTable("Proveedor");
                });

            modelBuilder.Entity("Kratos.Server.Models.Ventas.PuntoVenta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("actualizadoEn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("creadoEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("responsableId")
                        .HasColumnType("int");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.HasIndex("responsableId");

                    b.ToTable("PuntoVenta");
                });

            modelBuilder.Entity("Kratos.Server.Models.Ventas.TratamientoEmpresa", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("categoriaProductoId")
                        .HasColumnType("int");

                    b.Property<int>("empresaId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("categoriaProductoId");

                    b.HasIndex("empresaId");

                    b.ToTable("TratamientoEmpresa");
                });

            modelBuilder.Entity("Kratos.Server.Models.Ventas.Venta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<int?>("clienteId")
                        .HasColumnType("int");

                    b.Property<bool>("estaCancelada")
                        .HasColumnType("bit");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("numeroFactura")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("puntoVentaId")
                        .HasColumnType("int");

                    b.Property<int>("tipoPago")
                        .HasColumnType("int");

                    b.Property<int>("tipoVenta")
                        .HasColumnType("int");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("vendedorId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("clienteId");

                    b.HasIndex("puntoVentaId");

                    b.HasIndex("vendedorId");

                    b.ToTable("Venta");
                });

            modelBuilder.Entity("Kratos.Server.Models.Ventas.impuestoProducto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("impuestoId")
                        .HasColumnType("int");

                    b.Property<int>("productoId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("impuestoId");

                    b.HasIndex("productoId");

                    b.ToTable("impuestoProducto");
                });

            modelBuilder.Entity("Categoria", b =>
                {
                    b.HasOne("Categoria", "categoriapadreFk")
                        .WithMany()
                        .HasForeignKey("categoriapadreId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("categoriapadreFk");
                });

            modelBuilder.Entity("Empresa", b =>
                {
                    b.HasOne("Kratos.Server.Models.Seguridad.ActividadEconomica", "empresaactividadFk")
                        .WithMany()
                        .HasForeignKey("actividadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kratos.Server.Models.Seguridad.RegimenTributario", "empresaregimenFk")
                        .WithMany()
                        .HasForeignKey("regimenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kratos.Server.Models.Seguridad.TipoSociedad", "empresasociedadFk")
                        .WithMany()
                        .HasForeignKey("tiposociedadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("empresaactividadFk");

                    b.Navigation("empresaregimenFk");

                    b.Navigation("empresasociedadFk");
                });

            modelBuilder.Entity("Kratos.Server.Models.Seguridad.Permiso", b =>
                {
                    b.HasOne("Kratos.Server.Models.Seguridad.Modulo", "permisosmodulosId")
                        .WithMany()
                        .HasForeignKey("modulosId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kratos.Server.Models.Seguridad.Rol", "permisosrolesId")
                        .WithMany()
                        .HasForeignKey("rolesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("permisosmodulosId");

                    b.Navigation("permisosrolesId");
                });

            modelBuilder.Entity("Kratos.Server.Models.Seguridad.Rol", b =>
                {
                    b.HasOne("Empresa", "rolempresaFk")
                        .WithMany()
                        .HasForeignKey("empresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("rolempresaFk");
                });

            modelBuilder.Entity("Kratos.Server.Models.Seguridad.Usuario", b =>
                {
                    b.HasOne("Kratos.Server.Models.Seguridad.Rol", "usuariosrolesFk")
                        .WithMany()
                        .HasForeignKey("rolesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("usuariosrolesFk");
                });

            modelBuilder.Entity("Kratos.Server.Models.Ventas.Compra", b =>
                {
                    b.HasOne("Kratos.Server.Models.Ventas.Proveedor", "proveedorCompraFk")
                        .WithMany()
                        .HasForeignKey("proveedorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Kratos.Server.Models.Ventas.PuntoVenta", "puntoVentaVentaFk")
                        .WithMany()
                        .HasForeignKey("puntoVentaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kratos.Server.Models.Seguridad.Usuario", "solicitanteCompraFk")
                        .WithMany()
                        .HasForeignKey("solicitanteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("proveedorCompraFk");

                    b.Navigation("puntoVentaVentaFk");

                    b.Navigation("solicitanteCompraFk");
                });

            modelBuilder.Entity("Kratos.Server.Models.Ventas.Impuesto", b =>
                {
                    b.HasOne("Kratos.Server.Models.Ventas.TratamientoEmpresa", "tratamientoImpuestoFk")
                        .WithMany()
                        .HasForeignKey("tratamientoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("tratamientoImpuestoFk");
                });

            modelBuilder.Entity("Kratos.Server.Models.Ventas.Inventario", b =>
                {
                    b.HasOne("Kratos.Server.Models.Ventas.Producto", "productoFk")
                        .WithMany()
                        .HasForeignKey("productoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kratos.Server.Models.Ventas.PuntoVenta", "puntoventaFk")
                        .WithMany()
                        .HasForeignKey("puntoventaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("productoFk");

                    b.Navigation("puntoventaFk");
                });

            modelBuilder.Entity("Kratos.Server.Models.Ventas.POS", b =>
                {
                    b.HasOne("Kratos.Server.Models.Ventas.Producto", "ProductoPOSFk")
                        .WithMany()
                        .HasForeignKey("productoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kratos.Server.Models.Ventas.Venta", "VentaPOSFk")
                        .WithMany()
                        .HasForeignKey("ventaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProductoPOSFk");

                    b.Navigation("VentaPOSFk");
                });

            modelBuilder.Entity("Kratos.Server.Models.Ventas.Pedido", b =>
                {
                    b.HasOne("Kratos.Server.Models.Ventas.Compra", "pedidoCompraFk")
                        .WithMany()
                        .HasForeignKey("compraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kratos.Server.Models.Ventas.Producto", "productoCompraFk")
                        .WithMany()
                        .HasForeignKey("productoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("pedidoCompraFk");

                    b.Navigation("productoCompraFk");
                });

            modelBuilder.Entity("Kratos.Server.Models.Ventas.Producto", b =>
                {
                    b.HasOne("Categoria", "categoriaFk")
                        .WithMany()
                        .HasForeignKey("categoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Categoria", "subCategoriaFk")
                        .WithMany()
                        .HasForeignKey("subCategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("categoriaFk");

                    b.Navigation("subCategoriaFk");
                });

            modelBuilder.Entity("Kratos.Server.Models.Ventas.Proveedor", b =>
                {
                    b.HasOne("Empresa", "proveedorEmpresaFk")
                        .WithMany()
                        .HasForeignKey("empresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("proveedorEmpresaFk");
                });

            modelBuilder.Entity("Kratos.Server.Models.Ventas.PuntoVenta", b =>
                {
                    b.HasOne("Kratos.Server.Models.Seguridad.Usuario", "usuarioFk")
                        .WithMany()
                        .HasForeignKey("responsableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("usuarioFk");
                });

            modelBuilder.Entity("Kratos.Server.Models.Ventas.TratamientoEmpresa", b =>
                {
                    b.HasOne("Categoria", "categoriaTratamientoFk")
                        .WithMany()
                        .HasForeignKey("categoriaProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Empresa", "empresaFk")
                        .WithMany()
                        .HasForeignKey("empresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("categoriaTratamientoFk");

                    b.Navigation("empresaFk");
                });

            modelBuilder.Entity("Kratos.Server.Models.Ventas.Venta", b =>
                {
                    b.HasOne("Kratos.Server.Models.Seguridad.Usuario", "ClienteVentaFk")
                        .WithMany()
                        .HasForeignKey("clienteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Kratos.Server.Models.Ventas.PuntoVenta", "puntoVentaVentaFk")
                        .WithMany()
                        .HasForeignKey("puntoVentaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kratos.Server.Models.Seguridad.Usuario", "vendedorVentaFk")
                        .WithMany()
                        .HasForeignKey("vendedorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ClienteVentaFk");

                    b.Navigation("puntoVentaVentaFk");

                    b.Navigation("vendedorVentaFk");
                });

            modelBuilder.Entity("Kratos.Server.Models.Ventas.impuestoProducto", b =>
                {
                    b.HasOne("Kratos.Server.Models.Ventas.Impuesto", "impuestoRelacionFk")
                        .WithMany()
                        .HasForeignKey("impuestoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kratos.Server.Models.Ventas.Producto", "productoRelacionFk")
                        .WithMany()
                        .HasForeignKey("productoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("impuestoRelacionFk");

                    b.Navigation("productoRelacionFk");
                });
#pragma warning restore 612, 618
        }
    }
}
